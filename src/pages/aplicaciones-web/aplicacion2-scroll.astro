---
import Layout from '../../layouts/Layout.astro';
import Navbar from '../../components/Navbar.astro';
import Noticias from '../../components/Noticias.astro';
import NoticiasMobile from '../../components/NoticiasMobile.astro';
import { getCollection } from 'astro:content';
import AplicacionLayout from '../../layouts/AplicacionLayout.astro';
const metadatos = await getCollection("apps");
---

<AplicacionLayout title="SageMath" tipo="scroll" indice={0}>

<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/5.5.0/math.min.js" type="text/javascript"></script>
<script is:inline type="text/x-mathjax-config">MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});</script>
<script is:inline type="text/javascript"src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>  



 <script is:inline src="https://sagecell.sagemath.org/static/embedded_sagecell.js"></script>
    <script is:inline>
    // Make the div with id 'mycell' a Sage cell
    sagecell.makeSagecell({inputLocation:  '#mycell',
                           template:       sagecell.templates.minimal,
                           evalButtonText: 'Activate'});
    // Make *any* div with class 'compute' a Sage cell
    sagecell.makeSagecell({inputLocation: 'div.compute',
                           evalButtonText: 'Run'});
    </script>
    <script is:inline type="text/javascript" async="" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-MML-AM_CHTML">
</script>
<style>
                                                                                
body {
    background-color: #00b5e2;
}

canvas {
    background-color: black;

    padding-left: 0;
    padding-right: 0;

    margin-left: auto;
    margin-right: auto;
    display: block;
    width: 800px;
    height: 600px;
    border:3px solid #d3d3d3;
}
       

block_container {

    text-align: center;

}



.styled {
border: 0;
line-height: 2.5;
padding: 0 20px;
font-size: 1rem;
text-align: center;
color: #182bbe;
text-shadow: 1px 1px 1px #000;
border-radius: 10px;
background-color: rgba(220, 0, 0, 1);
background-image: linear-gradient(to top left, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) 30%, rgba(0, 0, 0, 0));
box-shadow: inset 2px 2px 3px rgba(255, 255, 255, 0.6), inset -2px -2px 3px rgba(0, 0, 0, 0.6);
}

.styled:hover {
    background-color: rgba(255, 0, 0, 1);
}

.styled:active {
    box-shadow: inset -2px -2px 3px rgba(255, 255, 255, 0.6), inset 2px 2px 3px rgba(0, 0, 0, 0.6);
}


</style>

<p class="sm:text-xl 2xl:text-2xl" style="color:white;"> SageMath (previously SAGE, "System for Algebra and Geometry Experimentation") is a free and open-source computer algebra system covering many aspects of mathematics. <br> <br>


This Web App illustrates the use of  <a href="https://www.sagemath.org/">SageMath</a> to perform simple or advanced mathematics on a webpage with no need to install any software. <br> <br> You can edit and experiment with the code on the following <a href="https://sagecell.sagemath.org/?q=iyqcsn"> SageMathCells</a>. There are many  good tutorials on the use of SageMath, for instance <a href="https://doc.sagemath.org/html/en/tutorial/index.html">here</a> and <a href="https://melczer.ca/files/SageIntro.html">here</a>.
<br> <br>


<hr>

<section class="flex flex-col pt-8 gap-12">
<section class="flex flex-col p-7 border-2 border-[#0C8CE9] rounded-xl gap-3 ">
  <h2 class="sm:text-2xl 2xl:text-3xl font-semibold"> Convert to Latex</h2>

  <p style="color:black;font-size:30px;"></p>

  <div class="compute " style="text-align:left;"><script is:inline type="text/x-sage">

%display latex
var('z')
z^12
sqrt(z^2 + 1/2)

    </script>
  </div>
</section>

<section class="flex flex-col p-7 border-2 border-[#0C8CE9] rounded-xl gap-3 ">

<h2 class="sm:text-2xl 2xl:text-3xl font-semibold"> Plots</h2>

<p style="color:black;font-size:30px;"></p>

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

p1 = line([(0,0),(1,1)], legend_label='line')
p2 = line([(1,1),(2,4)], legend_label='squared', legend_color='red')
p1 + p2

</script></div>

<br> 


<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

i = CDF.gen()
v = [zeta(0.5 + n/10 * i) for n in range(500)]
L = [(z.real(), z.imag()) for z in v]
line(L, rgbcolor=(3/4, 1/2, 5/8))

</script></div>

<br> 

<p style="color:black;font-size:30px;"></p>

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

plot(sin(x), (x, -7, 7), ticks=pi/2, tick_formatter=pi, axes_labels=['$x$','$\\sin(x)$'], fontsize=14, color='red')


</script></div>
<br> 

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

plot(sin, -3, 3, color='red')


</script></div>


<br>

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

scatter_plot([[1,1],[2,2],[4.3,1.1]], marker='s',facecolor='green')

</script></div>


<br>

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

def Harm_Osc(n, x):
 return sqrt(1/(2^n*factorial(n)))/(pi)^(0.25)*e^(-x^2/2)*hermite(n,x)
p = plot(x^2/2, (x, -3.2, 3.2), color='black') + text('$x^2/2$', (3.9, 5), color='black', fontsize=13)
for n in range(5):
 p += plot(Harm_Osc(n, x)/2 + n + 0.5, (x, -5, 5), color=hue(n/5.0), fill=n + 0.5) + text('$\Psi_%s$' %n, (5.2, n+0.5), color=hue(n/5.0), fontsize=13)
show(p, axes_labels=['$x$','$E$'])
</script></div>
<br> 
<br> 
</section>
<section class="flex flex-col p-7 border-2 border-[#0C8CE9] rounded-xl gap-3 ">
<h2 class="sm:text-2xl 2xl:text-3xl font-semibold"> Fourier Series</h2>

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

f = piecewise([((0,pi/2), -1), ((pi/2,pi), 2)])
f.fourier_series_cosine_coefficient(0)
f.fourier_series_sine_coefficient(5)
s5 = f.fourier_series_partial_sum(5)
plot(f, (0,pi)) + plot(s5, (x,0,pi), color='red')
</script></div>
<br> 
<br>

</section>

<section class="flex flex-col p-7 border-2 border-[#0C8CE9] rounded-xl gap-3 ">

<h2 class="sm:text-2xl 2xl:text-3xl font-semibold"> Animated Plots</h2>

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

frames = []
xr = (x, 0, 1)
for k in srange(1, 10):
    g = plot(sin(k*x), (x, -5, 5))
    frames.append(g)
a = animate(frames, ymin=-1, ymax=1.0)
a.show()
</script></div>

<br> 
<br>
</section>

<section class="flex flex-col p-7 border-2 border-[#0C8CE9] rounded-xl gap-3">

<h2 class="sm:text-2xl 2xl:text-3xl font-semibold"> Discrete Fourier Transform</h2>

<div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">

f1(t) = 3*sin(2*pi*(3*t)) + 5*sin(2*pi*(5*t)) + 7*sin(2*pi*(7*t)) + 9*sin(2*pi*(9*t))
p1 = plot(f1, (t, -1, 2))
p1.show()
size1 = 26

fft_data1 = FFT(size1)

for t in range(size1):
    fft_data1[t] = f1(t/size1)

p2=plot(fft_data1)
p2.show()

fft_data1.forward_transform()
fft_freq1 = [0 for j in range(size1/2)]


for f in range(size1/2):
    fft_freq1[f] = abs(vector(fft_data1[f]))/(size1/2)

p3=bar_chart(fft_freq1)
p3.show()
</script></div>
</section>




<section class="flex flex-col p-7 border-2 border-[#0C8CE9] rounded-xl gap-3 ">

<p class="sm:text-2xl 2xl:text-3xl font-semibold" style="color:white;">Add your own code here. </p>

 
        <div class="compute" style="text-align:left;"><script is:inline type="text/x-sage">



</script></div>
</section>
</section>




</AplicacionLayout>